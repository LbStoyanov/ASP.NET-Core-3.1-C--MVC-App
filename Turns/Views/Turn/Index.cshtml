@model Turns.Models.Turn;

@{
    ViewBag.Title = "Turns assignment";
}

<div class="row">
    <div class="col s6">
        <label asp-for="DoctorId">Doctor</label>
        <select asp-for="DoctorId" asp-items="ViewBag.DoctorId"></select>
    </div>
      <div class="col s6">
        <label asp-for="PatientId">Patient</label>
        <select asp-for="PatientId" asp-items="ViewBag.PatientId"></select>
    </div>
</div>

<br>

<div id="ModalTurn" class="modal">
    <div class="modal-content">
        <h4>Turn</h4>
        <form>
            <div>
                <label>Start</label>
                <input type="text" id="txtWorkingTimeFrom" readonly/>
            </div>
            <div>
                <label>End</label>
                <input type="text" id="txtWorkingTimeTo" readonly/>
            </div>
        </form>
    </div>
    <div class="modal-footer">
        <a href="#" id="btnDelete" class="modal-close waves-effect waves-red btn-flat">Delete</a>
        <a href="#" id="btnSave" class="modal-close waves-effect waves-green btn-flat">Save</a>
        <a href="#" id="btnClose" class="modal-close waves-effect waves-grey btn-flat">Close</a>
    </div>
</div>

<div id="HoursCalendar"></div>

<link href="~/fullcalendar/fullcalendar.css" rel="stylesheet"/>
<link href="~/fullcalendar/fullcalendar.print.css" rel="stylesheet" media="print"/>

@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <script src="~/fullcalendar/fullcalendar.min.js"></script>
    <script src="~/fullcalendar/locale/bg.js"><script/>
    <script>
        $(document).ready(function () {
            $('.modal').modal();
            var workingTimeFrom = "";
            var workingTimeTo = "";
            var turns = [];
            var selectedTurn = [];

            GetTurnsAndUpdateCalendar($('#DoctorId').val());

            $('#DoctorId').change(function(){
                    GetTurnsAndUpdateCalendar(this.value);
                });

            function GetTurnsAndUpdateCalendar(doctorId){
                turns = [];
                $.ajax({
                    type: 'GET',
                    url: "Turn/GetTurns",
                    data: { 'DoctorId': doctorId },
                    success: function (data) {
                        $.each(data, function (i, v){
                            turns.push({
                                turnId: v.turnId,
                                patientId: v.patientId,
                                doctorId: v.doctorId,
                                start: moment(v.workingTimeStart),
                                end: v.workingTimeEnd != null ? moment(v.workingTimeEnd) : null,
                            })
                        })
                        GenerateCalendar(turns);
                    },
                    error: function (){
                        alert('Error when try go get turns!');
                    }
                })
            }

            function GenerateCalendar (turns){

                $.ajax({
                    type: "GET",
                    url: "Doctor/SetWorkingTimeFrom",
                    data: {"doctorId": $('#DoctorId').val() },
                    async: false,
                    success: function (result){
                       workingTimeFrom = result;
                    },
                    error: function () {
                        alert("Error: Selected doctor's working time from is not found!");
                    }
                });

                $.ajax({
                    type: "GET",
                    url: "Doctor/SetWorkingTimeTo",
                    data: {"doctorId": $('#DoctorId').val() },
                    async: false,
                    success: function (result){
                        workingTimeTo = result;
                    },
                    error: function () {
                        alert("Error: Selected doctor's working time to is not found! ");
                    }
                });

                $('#HoursCalendar').fullCalendar('destroy');

                $('#HoursCalendar').fullCalendar({
                    contentHeight: 'auto',
                    defaultDate: new Date(),
                    slotLabelFormat: "HH:mm",
                    defaultView: 'agendaWeek',
                    header: {
                        left: 'prev, next today',
                        right: 'month,agendaWeek,agendaDay',
                    },
                    slotDuration: '00:30',
                    nowIndicator: true,
                    allDaySlot: false,
                    selectable: true,
                    eventLimit: true,
                    minTime: workingTimeFrom,
                    maxTime: workingTimeTo,
                    events: turns,
                    select: function(workingTimeFrom, workingTimeTo){
                        selectedTurn = {
                            turnId: 0,
                            start: workingTimeFrom,
                            end: workingTimeTo
                        };
                        OpenPopup();
                    }
                })
            }

            function OpenPopup(){
                $('#txtWorkingTimeFrom').val(selectedTurn.start.format('DD/MM/YYYY HH: mm'));
                $('#txtWorkingTimeTo').val(selectedTurn.end.format('DD/MM/YYYY HH: mm'));
                if(selectedTurn.turnId == 0){
                    $('btnSave').show();
                    $('btnDelete').hide();
                }else{
                    $('btnSave').hide();
                    $('btnDelete').show();
                }   
            }
        })
    </script>
}